" rt-labs indentation rules:
:set tabstop=3 shiftwidth=3 softtabstop=3 expandtab

" Colorscheme
:colorscheme gruvbox
let g:gruvbox_contrast_dark= '(medium)'
:set background=dark
:set guifont=Consolas\ 10

" Window settings
:set number ruler
:set colorcolumn=80

" Pane resizing using arrows:
nnoremap <silent> <Up>    :call animate#window_delta_height(-5)<CR>
nnoremap <silent> <Down>  :call animate#window_delta_height(5)<CR>
nnoremap <silent> <Left>  :call animate#window_delta_width(-5)<CR>
nnoremap <silent> <Right> :call animate#window_delta_width(5)<CR>

" Maximize window in gVim:
if has("gui_running")
   :set lines=1000 columns=1000
endif

" Syntax
:syntax on

" ctags tags file:
set tags=tags;/

" Enable filetype specific indentation. (Add e.g. py.vim for indentation for
" .py files.)
filetype plugin indent on

" No italic on comments:
:hi Comment gui=NONE
":hi Comment term=NONE

" Save file using specified line endings:
:command Sd silent! %s/\s\+$// | w ++ff=dos
:command Sm silent! %s/\s\+$// | w ++ff=mac
:command Su silent! %s/\s\+$// | w ++ff=unix

" Custom save command
" silent!: Suppress output of following command
" %s/\s\+$//: find and replace any trailing whitespaces
" |: perform another command
" w: save
:command W silent! %s/\s\+$// | w
:command Wq silent! %s/\s\+$// | wq
:command WQ Wq

" Turn off wrap-around searches (makes recursive macros safer):
:set nowrapscan

" Terminal colors:
":set termguicolors

" Highlight trailing whitespace:
:highlight ExtraWhitespace ctermbg=red guibg=red
:match ExtraWhitespace /\s\+$/


" Install vim-plug if not found:
if empty(glob('~/.vim/autoload/plug.vim'))
   silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
         \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
   autocmd VimEnter * PlugInstall --sync | source ~/.vimrc
endif

" Run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \| PlugInstall --sync | source ~/.vimrc
\| endif

" Load plugins:
call plug#begin()
Plug 'camspiers/animate.vim'
if !&diff
   Plug 'camspiers/lens.vim'
endif
call plug#end()

